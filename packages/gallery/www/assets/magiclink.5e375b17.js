import{r as d,u as h,R as e}from"./vendor.2a83d1c9.js";import{A as l}from"./AuthService.10b9bc61.js";import{b as f,H as v,I as j,a as w}from"./_app.41131035.js";import{s as u}from"./Auth.module.3666b23e.js";import{E as b,B as y}from"./EmptyLayout.17226d71.js";import{C as E}from"./Container.12944623.js";import{a as m}from"./Typography.a1510182.js";import{T as x}from"./TextField.bc1d9226.js";import{B as k}from"./Button.11e5af54.js";import"./capitalize.75c82fb0.js";import"./index.b1c16674.js";import"./Paper.678a179e.js";import"./IconButton.5bf8eb2a.js";import"./Close.a6b828d0.js";import"./createSvgIcon.50054fae.js";import"./useControlled.91b72ab4.js";import"./Dialog.4b91e65c.js";import"./Modal.22c32aef.js";import"./Backdrop.311b8a3e.js";import"./DialogTitle.d9bbb4af.js";import"./InputLabel.ed2935ea.js";import"./List.0dd6030d.js";var P=a=>{const{resetPassword:n,token:r}=a,t={password:""},[i,c]=d.exports.useState(t),{t:s}=h(),p=o=>{o.preventDefault(),c({...i,[o.target.name]:o.target.value})},g=o=>{o.preventDefault(),n(r,i.password),a.completeAction&&a.completeAction()};return e.createElement(b,null,e.createElement(E,{component:"main",maxWidth:"xs"},e.createElement("div",{className:u.paper},e.createElement(m,{component:"h1",variant:"h5"},s("user:auth.resetPassword.header")),e.createElement(m,{variant:"body2",color:"textSecondary",align:"center"},s("user:auth.resetPassword.description")),e.createElement("form",{className:u.form,noValidate:!0,onSubmit:o=>g(o)},e.createElement(x,{variant:"outlined",margin:"normal",required:!0,fullWidth:!0,id:"password",label:s("user:auth.resetPassword.lbl-password"),name:"password",autoComplete:"password",autoFocus:!0,onChange:o=>p(o)}),e.createElement(k,{type:"submit",fullWidth:!0,variant:"contained",color:"primary",className:u.submit},s("user:auth.resetPassword.lbl-submit"))))))};const S=a=>{const{token:n}=a,{t:r}=h(),t=f();return d.exports.useEffect(()=>{t(l.verifyEmail(n))},[]),e.createElement(b,null,e.createElement(E,{component:"main",maxWidth:"md"},e.createElement("div",{className:u.paper},e.createElement(m,{component:"h1",variant:"h5"},r("user:auth.verifyEmail.header")),e.createElement(y,{mt:3},e.createElement(m,{variant:"body2",color:"textSecondary",align:"center"},r("user:auth.verifyEmail.processing"))))))},A=a=>{const{auth:n,token:r,type:t}=a,{t:i}=h(),c=f();return d.exports.useEffect(()=>{if(t==="login")c(l.loginUserByJwt(r,"/","/"));else if(t==="connection"){const s=w().user;s!==null&&c(l.refreshConnections(s.id.value)),window.location.href="/profile-connections"}},[]),e.createElement(E,{component:"main",maxWidth:"md"},e.createElement(y,{mt:3},e.createElement(m,{variant:"body2",color:"textSecondary",align:"center"},i("user:magikLink.wait"))))},L=a=>{const n=new URLSearchParams(j().search),r=n.get("token"),t=n.get("type"),i=f(),c=(s,p)=>{i(l.resetPassword(s,p))};return t==="verify"?e.createElement(S,{...a,type:t,token:r}):t==="reset"?e.createElement(P,{resetPassword:c,type:t,token:r}):e.createElement(A,{...a,token:r,type:t})};var B=v(L);const Y=()=>e.createElement(B,null);export{Y as AuthMagicLinkPage,Y as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
